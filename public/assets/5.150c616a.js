var b=Object.defineProperty;var l=Object.getOwnPropertySymbols;var h=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable;var m=(s,e,t)=>e in s?b(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,f=(s,e)=>{for(var t in e||(e={}))h.call(e,t)&&m(s,t,e[t]);if(l)for(var t of l(e))k.call(e,t)&&m(s,t,e[t]);return s};import"./modulepreload-polyfill.b7f2da20.js";import{g as x,b as g,m as E,o as L}from"./painterState.2081fc22.js";import{c as u,n as d}from"./lines_2d.3b9663ff.js";import{B as j}from"./pointer.1f73fbf8.js";import{c as y}from"./lines.d75a440f.js";import"./vectors.212c15dd.js";import"./core.f107e89c.js";import"./core.b58d4e59.js";import"./ast.22bf2736.js";import"./vendor.86045b5f.js";import"./quad.93433895.js";import"./primitives.6d8411f1.js";import"./points.c0fbbf77.js";const P=document.getElementById("canvas"),i=x(P),S=f({},g);i.state.device.sizeMultiplier=window.devicePixelRatio;let n=u().append(d([0,0])),r=y(i,"current-line",{dynamicForm:!0,color:[.1,.1,0,1],lineWidth:20});const a=i.getLayer("scene").update({sketches:r.sketch,drawSettings:{clearColor:[.8,.8,1,1],clearBits:E(i.gl,"color")},directRender:!0});let p=!1,o=[0,0];i.listen("index",g.POINTER,s=>{const e=s.device.pointer;if(e.dragging){const t=i.state.device.sizeMultiplier;if(p){const c=d([o[0]-e.drag.x*t,o[1]-e.drag.y*t]);n==null||n.append(c),L(()=>{r.update({points:[...n].map(v=>v.vertex)}),a.update({sketches:r.sketch}),i.painter.compose(a)},"update-and-paint")}else{p=!0,o=[e.pressed[j.LEFT].clientX*t,e.pressed[j.LEFT].clientY*t];const c=d([o[0],o[1]]);n=u().append(c)}}else!e.dragging&&p&&(p=!1)});i.listen("index",S.RESIZE,()=>{a.update(),r.update({points:[...n].map(s=>s.vertex)}),i.painter.compose(a)});
