var J=Object.defineProperty;var S=Object.getOwnPropertySymbols;var D=Object.prototype.hasOwnProperty,T=Object.prototype.propertyIsEnumerable;var b=(t,e,o)=>e in t?J(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o,f=(t,e)=>{for(var o in e||(e={}))D.call(e,o)&&b(t,o,e[o]);if(S)for(var o of S(e))T.call(e,o)&&b(t,o,e[o]);return t};var A=(t,e)=>{var o={};for(var r in t)D.call(t,r)&&e.indexOf(r)<0&&(o[r]=t[r]);if(t!=null&&S)for(var r of S(t))e.indexOf(r)<0&&T.call(t,r)&&(o[r]=t[r]);return o};import{g as K,a as L}from"./ast.22bf2736.js";import{j as w,k as g,u as s,o as _,l as z,n as i,t as k,q as V,$ as M,v as j,w as B,x as c,y as R,z as I,A as x,B as G,C as X,D as H,E as Z,F as Q,G as tt,H as et}from"./vendor.86045b5f.js";import{f as N}from"./painterState.2081fc22.js";const n=K(),y=L();let U,$,m,u,v,p,l;const ot=n(w([U=g("vec2","position"),m=g("vec4","color"),u=s("vec4","uColor"),v=s("vec2","uSize"),p=s("float","uPointSize"),l=_("vec4","vColor"),z(()=>[i(l,k(V(M(u),j(0)),m,u)),i(n.gl_PointSize,p),i(n.gl_Position,B(c(I(x(U,v)),R(1,-1)),0,1))])]));let q,F,W;const rt=n(w([$=g("vec3","position"),m=g("vec4","color"),u=s("vec4","uColor"),v=s("vec2","uSize"),p=s("float","uPointSize"),q=s("mat4","uViewMat"),F=s("mat4","uProjectionMat"),W=s("bool","uUseProjection"),l=_("vec4","vColor"),z(()=>{let t;return[i(l,k(V(M(u),j(0)),m,u)),t=G(X(F,1)),i(n.gl_Position,c(F,c(q,B($,1)))),i(n.gl_PointSize,k(W,c(H(v),c(H(t),x(c(.5,p),M(n.gl_Position)))),p))]})])),Y=y(w([l=g("vec4","vColor"),z(()=>{let t;return[t=G(I(y.gl_PointCoord)),Z(Q(tt(t,t),j(1)),[et],[i(y.gl_FragColor,l)])]})]));function ct(t,e,o){const r=(P={})=>{const a=f(f({positions:[]},o),P),h=t.getShade(e).update({frag:a.frag||Y,vert:ot}),C=t.getForm(e).update(E(a));return t.getSketch(e).update({form:C,shade:h,uniforms:{uPointSize:(a.pointSize||1)*t.state.device.sizeMultiplier,uSize:[t.gl.drawingBufferWidth,t.gl.drawingBufferHeight],uColor:a.color||[0,0,0,0]},drawSettings:a.drawSettings})};return{sketch:r(),update:r}}function ut(t,e,o){const r=(P={})=>{const a=f(f({positions:[]},o),P),h=t.getShade(e).update({frag:a.frag||Y,vert:rt}),C=t.getForm(e).update(E(a));return t.getSketch(e).update({form:C,shade:h,uniforms:{uPointSize:a.pointSize||1,uSize:[t.gl.drawingBufferWidth,t.gl.drawingBufferHeight],uColor:a.color||[0,0,0,0],uViewMat:a.viewMat,uProjectionMat:a.projectionMat,uUseProjection:a.scalePerspective||!1},drawSettings:a.drawSettings})};return{sketch:r(),update:r}}function E(o){var r=o,{positions:t=[]}=r,e=A(r,["positions"]);const d={drawType:"POINTS",attribs:{position:{buffer:new Float32Array(N(t)),storeType:e.dynamicForm?"DYNAMIC":"STATIC"}},itemCount:t.length};return e.colors&&(d.attribs.color={buffer:new Float32Array(N(e.colors)),storeType:e.dynamicForm?"DYNAMIC":"STATIC"}),d}export{ut as a,ct as c};
