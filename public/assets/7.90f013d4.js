var k=Object.defineProperty;var j=Object.getOwnPropertySymbols;var E=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable;var b=(t,e,n)=>e in t?k(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,p=(t,e)=>{for(var n in e||(e={}))E.call(e,n)&&b(t,n,e[n]);if(j)for(var n of j(e))y.call(e,n)&&b(t,n,e[n]);return t};import"./modulepreload-polyfill.b7f2da20.js";import{g as P,b as h,m as S,o as w}from"./painterState.2081fc22.js";import{c,n as d,s as B}from"./lines_2d.3b9663ff.js";import{B as L}from"./pointer.1f73fbf8.js";import{c as x}from"./lines.d75a440f.js";import"./vectors.212c15dd.js";import"./core.f107e89c.js";import"./core.b58d4e59.js";import"./ast.22bf2736.js";import"./vendor.86045b5f.js";import"./quad.93433895.js";import"./primitives.6d8411f1.js";import"./points.c0fbbf77.js";const F=document.getElementById("canvas"),i=P(F),R=p({},h);i.state.device.sizeMultiplier=window.devicePixelRatio;let s=c().append(d([0,0])),l=c().append(d([0,0])),f=x(i,"current-line1",{dynamicForm:!0,color:[.1,.1,0,1],lineWidth:5}),g=x(i,"current-line2",{dynamicForm:!0,color:[1,.1,.1,1],lineWidth:5});const v=i.getLayer("scene").update({sketches:[g.sketch,f.sketch],drawSettings:{clearColor:[.8,.8,1,1],clearBits:S(i.gl,"color")},directRender:!0});let m=!1,a=[0,0];i.listen("",h.POINTER,t=>{var n;const e=t.device.pointer;if(e.dragging){const o=i.state.device.sizeMultiplier;if(m){const r=d([a[0]-e.drag.x*o,a[1]-e.drag.y*o]);s.append(r,!0),l.append(p({},r),!0),B((n=s.last)==null?void 0:n.prev,{depth:2}),w(()=>{f.update({points:[...s].map(u=>u.vertex)}),g.update({points:[...l].map(u=>u.vertex)}),i.painter.compose(v)},"update-and-paint")}else{m=!0,a=[e.pressed[L.LEFT].clientX*o,e.pressed[L.LEFT].clientY*o];const r=d([a[0],a[1]]);s=c().append(r),l=c().append(p({},r))}}else!e.dragging&&m&&(m=!1)});i.listen("index",R.RESIZE,()=>{v.update(),g.update({points:[...l].map(t=>t.vertex)}),f.update({points:[...s].map(t=>t.vertex)}),i.painter.compose(v)});
